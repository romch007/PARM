<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="1"/>
    </tool>
    <tool name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="north"/>
    </tool>
    <tool name="Probe">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="radix" val="10unsigned"/>
    </tool>
    <tool name="Tunnel">
      <a name="facing" val="south"/>
    </tool>
    <tool name="Pull Resistor">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Clock">
      <a name="facing" val="north"/>
    </tool>
    <tool name="Constant">
      <a name="facing" val="south"/>
      <a name="value" val="0x0"/>
      <a name="width" val="2"/>
    </tool>
    <tool name="Ground">
      <a name="facing" val="west"/>
      <a name="width" val="24"/>
    </tool>
    <tool name="Transistor">
      <a name="type" val="n"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1">
    <tool name="NOT Gate">
      <a name="size" val="20"/>
    </tool>
    <tool name="AND Gate">
      <a name="size" val="30"/>
    </tool>
    <tool name="OR Gate">
      <a name="size" val="30"/>
    </tool>
  </lib>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  --use ieee.numeric_std.all;

entity VHDL_Component is
  port(
  ------------------------------------------------------------------------------
  --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example
  ------------------------------------------------------------------------------
  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
    );
end VHDL_Component;

--------------------------------------------------------------------------------
--Complete your VHDL description below
architecture type_architecture of VHDL_Component is


begin


end type_architecture;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <main name="Opcode_Decoder"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="font" val="SansSerif plain 12"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="Opcode_Decoder">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Opcode_Decoder"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(80,360)" name="Splitter">
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="0" loc="(80,80)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="south"/>
      <a name="label" val="Opcode"/>
      <a name="width" val="6"/>
    </comp>
    <comp lib="0" loc="(800,120)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Shift"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(800,200)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Data_Processing"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(800,290)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Load_Store"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(800,370)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="SP_Address"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(800,490)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="Conditional"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(370,160)" name="NOT Gate"/>
    <comp lib="1" loc="(370,200)" name="NOT Gate"/>
    <comp lib="1" loc="(470,240)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(470,290)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(470,340)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(470,490)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(540,330)" name="AND Gate">
      <a name="negate0" val="true"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(540,370)" name="AND Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="8" loc="(1035,495)" name="Text">
      <a name="text" val="Conditional branch"/>
    </comp>
    <comp lib="8" loc="(1065,210)" name="Text">
      <a name="text" val="Data Processing"/>
    </comp>
    <comp lib="8" loc="(970,130)" name="Text">
      <a name="text" val="Shift, add, sub, mov"/>
    </comp>
    <comp lib="8" loc="(990,295)" name="Text">
      <a name="text" val="Load/Store"/>
    </comp>
    <comp lib="8" loc="(995,377)" name="Text">
      <a name="text" val="SP Address"/>
    </comp>
    <wire from="(100,330)" to="(270,330)"/>
    <wire from="(100,340)" to="(190,340)"/>
    <wire from="(100,350)" to="(180,350)"/>
    <wire from="(180,160)" to="(180,350)"/>
    <wire from="(180,160)" to="(280,160)"/>
    <wire from="(190,190)" to="(190,340)"/>
    <wire from="(190,190)" to="(290,190)"/>
    <wire from="(270,330)" to="(270,380)"/>
    <wire from="(270,380)" to="(480,380)"/>
    <wire from="(280,160)" to="(280,330)"/>
    <wire from="(280,160)" to="(340,160)"/>
    <wire from="(280,330)" to="(280,480)"/>
    <wire from="(280,330)" to="(440,330)"/>
    <wire from="(280,480)" to="(440,480)"/>
    <wire from="(290,190)" to="(290,200)"/>
    <wire from="(290,200)" to="(290,300)"/>
    <wire from="(290,200)" to="(340,200)"/>
    <wire from="(290,300)" to="(290,500)"/>
    <wire from="(290,300)" to="(440,300)"/>
    <wire from="(290,500)" to="(440,500)"/>
    <wire from="(370,160)" to="(390,160)"/>
    <wire from="(370,200)" to="(400,200)"/>
    <wire from="(390,160)" to="(390,230)"/>
    <wire from="(390,230)" to="(390,280)"/>
    <wire from="(390,230)" to="(440,230)"/>
    <wire from="(390,280)" to="(440,280)"/>
    <wire from="(400,200)" to="(400,250)"/>
    <wire from="(400,250)" to="(400,350)"/>
    <wire from="(400,250)" to="(440,250)"/>
    <wire from="(400,350)" to="(440,350)"/>
    <wire from="(470,240)" to="(490,240)"/>
    <wire from="(470,290)" to="(500,290)"/>
    <wire from="(470,340)" to="(490,340)"/>
    <wire from="(470,490)" to="(800,490)"/>
    <wire from="(480,320)" to="(480,380)"/>
    <wire from="(480,320)" to="(500,320)"/>
    <wire from="(480,380)" to="(510,380)"/>
    <wire from="(490,120)" to="(490,240)"/>
    <wire from="(490,120)" to="(800,120)"/>
    <wire from="(490,340)" to="(490,360)"/>
    <wire from="(490,340)" to="(510,340)"/>
    <wire from="(490,360)" to="(510,360)"/>
    <wire from="(500,200)" to="(500,290)"/>
    <wire from="(500,200)" to="(800,200)"/>
    <wire from="(540,330)" to="(740,330)"/>
    <wire from="(540,370)" to="(800,370)"/>
    <wire from="(740,290)" to="(740,330)"/>
    <wire from="(740,290)" to="(800,290)"/>
    <wire from="(80,80)" to="(80,360)"/>
  </circuit>
</project>
